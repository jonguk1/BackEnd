<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user.model.MemberMapper">
	<select id="userCount" resultType="int">
		select count(*) from
		java_member
	</select>

	<!-- 회원가입 처리 #{name} ==>VO객체의 getName()를 호출 user.model.MemberVO ==> mybatis,config.xml에서 
		별칭(typeAlias) 등록함 -->
	<insert id="insertMember" parameterType="Member">
		insert into
		java_member(name,id,pw,tel,indate)
		values(#{name},#{id},#{pw},#{tel:VARCHAR},sysdate)
	</insert>
	<!-- 아이디 중복체크 -->
	<select id="idCheck" resultType="_int" parameterType="string">
		select count(id) from java_member
		where id=#{value}
	</select>

	<!-- 회원목록. select결과를 MemberVO에 자동으로 담아준다(setter메서드 이용) DB 테이블의 컬럼명과 VO객체의 
		property명이 같아야 자동으로 담아준다 -->
	<select id="listMember_old" resultType="Member">
		select * from java_member
		order by name asc
	</select>

	<select id="listMember" resultType="Member" parameterType="map">
		select * from(
		select row_number() over(order by name asc)
		rn,java_member.* from java_member)
		where rn between #{start} and #{end}
	</select>
	
	<delete id="deleteMember" parameterType="string">
		delete from java_member
		<where>
			id=#{value}
		</where>	
	</delete>
	
	<!-- id로 회원정보 가져오기  -->
	<select id="getMember" resultType="Member" parameterType="string">
		select * from java_member
		<where>
			id=#{value}
		</where>
	</select>
	
	<!-- 회원정보 수정 -->
	<update id ="updateMember" parameterType="Member">
		update java_member
		<set>
			name=#{name}, pw=#{pw} ,tel=#{tel:VARCHAR}
		</set>
		<where>
			id=#{id}
		</where>
	</update>
	
</mapper>