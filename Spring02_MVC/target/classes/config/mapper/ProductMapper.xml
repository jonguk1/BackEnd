<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper
3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.multi.mapper.ProductMapper">
	<select id="getUpCategory" resultType="Category">
		select * from upCategory order by 1 asc
	</select>

	<insert id="productInsert" parameterType="Product">
		<selectKey keyProperty="pnum" resultType="_int" order="BEFORE">
			select product_seq.nextval from dual
		</selectKey>
		insert into products values(#{pnum},#{pname},#{pimage1:VARCHAR},#{pimage2:VARCHAR},#{pimage3:VARCHAR},
		#{price},#{saleprice:NUMERIC},#{pqty:NUMERIC},#{point:NUMERIC},#{pspec},#{pcontents:VARCHAR},
		#{pcompany:VARCHAR},sysdate,#{upCg_code},#{downCg_code})
	
	</insert>
	
	<select id="productList" resultType="Product">
		select p.*,
		(select upCg_name from upcategory where upCg_code = p.upCg_code) upCg_name,
		(select downCg_name from downcategory where downCg_code = p.downCg_code) downCg_name
		from products p
		order by pnum desc
	</select>
	
	<delete id="productDelete" parameterType="_int">
		delete from products
		<where>
			pnum=#{value}
		</where>
	</delete>
	
	<select id="getProduct" resultType="Product" parameterType="_int">
		select p.*,
		(select upCg_name from upcategory where upCg_code = p.upCg_code) upCg_name,
		(select downCg_name from downcategory where downCg_code = p.downCg_code) downCg_name
		from products p
		<where>
			pnum=#{value}
		</where>
	</select>
	
	<select id="selectByPspec" resultType="Product" parameterType="string">
		select * from products where pspec=upper(#{pspec})
		order by pnum desc
	</select>
	
	<update id="productUpdate" parameterType="Product">
		update products
		<set>
			pname=#{pname},price=#{price},saleprice=#{saleprice:NUMERIC}
			,pqty=#{pqty:NUMERIC},point=#{point:NUMERIC},pspec=#{pspec:VARCHAR},pcontents=#{pcontents:VARCHAR}
			,pcompany=#{pcompany:VARCHAR},upCg_code=#{upCg_code},downCg_code=#{downCg_code}
			<if test="pimage1 !=null and pimage1 !=''">
				,pimage1=#{pimage1}
			</if>
			<if test="pimage2 !=null and pimage2 !=''">
				,pimage2=#{pimage2}
			</if>
			<if test="pimage3 !=null and pimage3 !=''">
				,pimage3=#{pimage3}
			</if>
		</set>
		<where>
			pnum=#{pnum}
		</where>
		
	</update>
	

</mapper>